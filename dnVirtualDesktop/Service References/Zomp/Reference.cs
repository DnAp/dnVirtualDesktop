//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dnVirtualDesktop.Zomp {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="EventData", Namespace="http://schemas.datacontract.org/2004/07/zomp.co_WebService")]
    [Serializable()]
    public partial class EventData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private string AdditionalDetailsField;
        
        [OptionalField()]
        private string ApplicationNameField;
        
        [OptionalField()]
        private string ApplicationVersionField;
        
        [OptionalField()]
        private string CallingMethodField;
        
        [OptionalField()]
        private string ComputerInfoField;
        
        [OptionalField()]
        private string ComputerNameField;
        
        [OptionalField()]
        private System.DateTime EventDateTimeField;
        
        [OptionalField()]
        private string EventDetailsField;
        
        [OptionalField()]
        private string EventNameField;
        
        [OptionalField()]
        private string ExceptionField;
        
        [OptionalField()]
        private string ModuleNameField;
        
        [OptionalField()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public string AdditionalDetails {
            get {
                return this.AdditionalDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalDetailsField, value) != true)) {
                    this.AdditionalDetailsField = value;
                    this.RaisePropertyChanged("AdditionalDetails");
                }
            }
        }
        
        [DataMember()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [DataMember()]
        public string ApplicationVersion {
            get {
                return this.ApplicationVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationVersionField, value) != true)) {
                    this.ApplicationVersionField = value;
                    this.RaisePropertyChanged("ApplicationVersion");
                }
            }
        }
        
        [DataMember()]
        public string CallingMethod {
            get {
                return this.CallingMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.CallingMethodField, value) != true)) {
                    this.CallingMethodField = value;
                    this.RaisePropertyChanged("CallingMethod");
                }
            }
        }
        
        [DataMember()]
        public string ComputerInfo {
            get {
                return this.ComputerInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputerInfoField, value) != true)) {
                    this.ComputerInfoField = value;
                    this.RaisePropertyChanged("ComputerInfo");
                }
            }
        }
        
        [DataMember()]
        public string ComputerName {
            get {
                return this.ComputerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputerNameField, value) != true)) {
                    this.ComputerNameField = value;
                    this.RaisePropertyChanged("ComputerName");
                }
            }
        }
        
        [DataMember()]
        public System.DateTime EventDateTime {
            get {
                return this.EventDateTimeField;
            }
            set {
                if ((this.EventDateTimeField.Equals(value) != true)) {
                    this.EventDateTimeField = value;
                    this.RaisePropertyChanged("EventDateTime");
                }
            }
        }
        
        [DataMember()]
        public string EventDetails {
            get {
                return this.EventDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventDetailsField, value) != true)) {
                    this.EventDetailsField = value;
                    this.RaisePropertyChanged("EventDetails");
                }
            }
        }
        
        [DataMember()]
        public string EventName {
            get {
                return this.EventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EventNameField, value) != true)) {
                    this.EventNameField = value;
                    this.RaisePropertyChanged("EventName");
                }
            }
        }
        
        [DataMember()]
        public string Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [DataMember()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [DataMember()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="EmailData", Namespace="http://schemas.datacontract.org/2004/07/zomp.co_WebService")]
    [Serializable()]
    public partial class EmailData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private string AttachmentIDField;
        
        [OptionalField()]
        private string[] BCCField;
        
        [OptionalField()]
        private string BodyField;
        
        [OptionalField()]
        private string[] CCField;
        
        [OptionalField()]
        private string FromEmailField;
        
        [OptionalField()]
        private System.Net.Mail.LinkedResource[] LinkedResources1Field;
        
        [OptionalField()]
        private string PasswordField;
        
        [OptionalField()]
        private string SubjectField;
        
        [OptionalField()]
        private string[] ToEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public string AttachmentID {
            get {
                return this.AttachmentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentIDField, value) != true)) {
                    this.AttachmentIDField = value;
                    this.RaisePropertyChanged("AttachmentID");
                }
            }
        }
        
        [DataMember()]
        public string[] BCC {
            get {
                return this.BCCField;
            }
            set {
                if ((object.ReferenceEquals(this.BCCField, value) != true)) {
                    this.BCCField = value;
                    this.RaisePropertyChanged("BCC");
                }
            }
        }
        
        [DataMember()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [DataMember()]
        public string[] CC {
            get {
                return this.CCField;
            }
            set {
                if ((object.ReferenceEquals(this.CCField, value) != true)) {
                    this.CCField = value;
                    this.RaisePropertyChanged("CC");
                }
            }
        }
        
        [DataMember()]
        public string FromEmail {
            get {
                return this.FromEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.FromEmailField, value) != true)) {
                    this.FromEmailField = value;
                    this.RaisePropertyChanged("FromEmail");
                }
            }
        }
        
        [DataMember()]
        public System.Net.Mail.LinkedResource[] LinkedResources1 {
            get {
                return this.LinkedResources1Field;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedResources1Field, value) != true)) {
                    this.LinkedResources1Field = value;
                    this.RaisePropertyChanged("LinkedResources1");
                }
            }
        }
        
        [DataMember()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [DataMember()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [DataMember()]
        public string[] ToEmail {
            get {
                return this.ToEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ToEmailField, value) != true)) {
                    this.ToEmailField = value;
                    this.RaisePropertyChanged("ToEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Zomp.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadFile", ReplyAction="http://tempuri.org/IService/UploadFileResponse")]
        string UploadFile(byte[] f, string filename, bool CreateDownloadCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadFile", ReplyAction="http://tempuri.org/IService/UploadFileResponse")]
        System.Threading.Tasks.Task<string> UploadFileAsync(byte[] f, string filename, bool CreateDownloadCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetNextEmailCommand", ReplyAction="http://tempuri.org/IService/GetNextEmailCommandResponse")]
        string GetNextEmailCommand();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetNextEmailCommand", ReplyAction="http://tempuri.org/IService/GetNextEmailCommandResponse")]
        System.Threading.Tasks.Task<string> GetNextEmailCommandAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddEventToDatabase", ReplyAction="http://tempuri.org/IService/AddEventToDatabaseResponse")]
        string AddEventToDatabase(EventData theEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddEventToDatabase", ReplyAction="http://tempuri.org/IService/AddEventToDatabaseResponse")]
        System.Threading.Tasks.Task<string> AddEventToDatabaseAsync(EventData theEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendEmail", ReplyAction="http://tempuri.org/IService/SendEmailResponse")]
        void SendEmail(EmailData d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendEmail", ReplyAction="http://tempuri.org/IService/SendEmailResponse")]
        System.Threading.Tasks.Task SendEmailAsync(EmailData d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/zVD_CurrentVersion", ReplyAction="http://tempuri.org/IService/zVD_CurrentVersionResponse")]
        string zVD_CurrentVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/zVD_CurrentVersion", ReplyAction="http://tempuri.org/IService/zVD_CurrentVersionResponse")]
        System.Threading.Tasks.Task<string> zVD_CurrentVersionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<IService>, IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string UploadFile(byte[] f, string filename, bool CreateDownloadCode) {
            return base.Channel.UploadFile(f, filename, CreateDownloadCode);
        }
        
        public System.Threading.Tasks.Task<string> UploadFileAsync(byte[] f, string filename, bool CreateDownloadCode) {
            return base.Channel.UploadFileAsync(f, filename, CreateDownloadCode);
        }
        
        public string GetNextEmailCommand() {
            return base.Channel.GetNextEmailCommand();
        }
        
        public System.Threading.Tasks.Task<string> GetNextEmailCommandAsync() {
            return base.Channel.GetNextEmailCommandAsync();
        }
        
        public string AddEventToDatabase(EventData theEvent) {
            return base.Channel.AddEventToDatabase(theEvent);
        }
        
        public System.Threading.Tasks.Task<string> AddEventToDatabaseAsync(EventData theEvent) {
            return base.Channel.AddEventToDatabaseAsync(theEvent);
        }
        
        public void SendEmail(EmailData d) {
            base.Channel.SendEmail(d);
        }
        
        public System.Threading.Tasks.Task SendEmailAsync(EmailData d) {
            return base.Channel.SendEmailAsync(d);
        }
        
        public string zVD_CurrentVersion() {
            return base.Channel.zVD_CurrentVersion();
        }
        
        public System.Threading.Tasks.Task<string> zVD_CurrentVersionAsync() {
            return base.Channel.zVD_CurrentVersionAsync();
        }
    }
}
